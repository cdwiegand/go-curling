name: Build docker image

on:
  workflow_dispatch:
  push:
    tags:
      - "v*"

permissions:
  contents: read
  packages: write

env:
  GHCR_REPO: ghcr.io/${{ github.repository }}
  DOCKER_TAG: latest

jobs:
  build:
    runs-on: ubuntu-latest
    name: Build docker image
    strategy:
      fail-fast: false
      matrix:
        platform: 
          - os: linux/amd64
            baseimage: 1.23
          - os: linux/arm64
            baseimage: 1.23
          - os: linux/ppc64le
            baseimage: 1.23
          - os: linux/s390x
            baseimage: 1.23
          - os: linux/386
            baseimage: 1.23
          - os: linux/arm/v7
            baseimage: 1.23
          - os: linux/arm/v6
            baseimage: 1.23-alpine
          - os: linux/mips64le
            baseimage: 1.23
          - os: linux/riscv64
            baseimage: 1.23-alpine

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Prepare
        run: |
          platform=${{ matrix.platform }}
          echo "PLATFORM_PAIR=${platform//\//-}" >> $GITHUB_ENV

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.GHCR_REPO }}

      - name: Log into Docker Hub Registry
        if: ${{ vars.DOCKER_HUB_USERNAME != '' }}
        uses: docker/login-action@v2
        with:
          registry: docker.io
          username: ${{ vars.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Log into GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker Images
        uses: docker/build-push-action@v6
        id: build
        with:
          context: .
          platforms: ${{ matrix.platform.os }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: SOURCE_TAG=${{ matrix.platform.baseimage }}         
          outputs: type=image,"name=${{ env.GHCR_REPO }}",push-by-digest=true,name-canonical=true,push=true

      - name: Export digest
        run: |
          mkdir -p /tmp/digests
          digest="${{ steps.build.outputs.digest }}"
          touch "/tmp/digests/${digest#sha256:}"          

      - name: Upload digest
        uses: actions/upload-artifact@v4
        with:
          path: /tmp/digests/*
          if-no-files-found: error
          retention-days: 1

  merge:
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - name: Download digests
        uses: actions/download-artifact@v4
        with:
          path: /tmp/digests
          pattern: digests-*
          merge-multiple: true

      - name: Log into Docker Hub Registry
        if: ${{ vars.DOCKER_HUB_USERNAME != '' }}
        uses: docker/login-action@v2
        with:
          registry: docker.io
          username: ${{ vars.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Log into GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.GHCR_REPO }}            
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}

      - name: Create manifest list and push to GitHub Container Registry
        working-directory: /tmp/digests
        run: |
          docker buildx imagetools create $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") \
            $(printf '${{ env.GHCR_REPO }}@sha256:%s ' *)           

      - name: Create manifest list and push to Docker Hub container registry
        if: ${{ vars.DOCKER_HUB_USERNAME != '' && vars.DOCKER_HUB_REPOSITORY != '' }}
        working-directory: /tmp/digests
        run: |
          docker buildx imagetools create $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") \
            $(printf '${{ vars.DOCKER_HUB_REPOSITORY }}@sha256:%s ' *)
